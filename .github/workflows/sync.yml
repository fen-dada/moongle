name: Mirror upstream (force, keep workflow)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"  # 每天 12:00 Asia/Singapore（UTC 04:00）

permissions:
  contents: write

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add remotes & fetch
        run: |
          set -e
          git remote add upstream https://github.com/HCHogan/moongle.git
          git fetch upstream --prune --tags
          # 存放 workflow 的专用分支（你需先在仓库中新建分支 automation，并把 yml 放进去）
          git fetch origin automation:refs/remotes/origin/automation || true

      - name: Resolve default branches
        id: br
        run: |
          set -e
          ORI_DEF="${{ github.event.repository.default_branch }}"
          if [ -z "$ORI_DEF" ]; then
            ORI_DEF=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
          fi
          if git ls-remote --heads upstream "$ORI_DEF" | grep -q .; then
            UPS_DEF="$ORI_DEF"
          else
            UPS_DEF=$(git remote show upstream | sed -n '/HEAD branch/s/.*: //p')
          fi
          echo "origin_default=$ORI_DEF" >> $GITHUB_OUTPUT
          echo "upstream_default=$UPS_DEF" >> $GITHUB_OUTPUT
          echo "Origin default: $ORI_DEF"
          echo "Upstream default: $UPS_DEF"

      - name: Force mirror default branch to upstream
        run: |
          set -e
          ORI_DEF="${{ steps.br.outputs.origin_default }}"
          UPS_DEF="${{ steps.br.outputs.upstream_default }}"

          # 1) 硬重置到 upstream
          git checkout -B "$ORI_DEF" "upstream/$UPS_DEF"
          git reset --hard "upstream/$UPS_DEF"

          # 2) 从 automation 分支把 workflow 取回到工作树（只取 .github/workflows 路径）
          #    你可以把自己需要长期保留的 yml 都放在这个目录下
          if git ls-remote --heads origin automation | grep -q .; then
            git checkout origin/automation -- .github/workflows
          else
            echo "WARNING: 'automation' branch not found on origin; no workflows restored."
          fi

          # 3) 若有改动则提交一个“注入 workflow”的轻提交
          if ! git diff --quiet || ! git diff --cached --quiet; then
            git add .github/workflows || true
            git commit -m "chore: inject workflows from automation branch"
          fi

          # 4) 强制推送（保持几乎镜像；仅多出上一步的提交）
          git push origin "$ORI_DEF" --force --tags

      # （可选）其他分支也镜像 + 注入 workflow（通常没必要）
      # - name: Force mirror all branches (optional)
      #   run: |
      #     set -e
      #     UPS_BRANCHES=$(git ls-remote --heads upstream | awk '{print $2}' | sed 's|refs/heads/||')
      #     for br in $UPS_BRANCHES; do
      #       [ "$br" = "${{ steps.br.outputs.upstream_default }}" ] && continue
      #       git branch -f "$br" "upstream/$br" || git checkout -B "$br" "upstream/$br"
      #       git push origin "refs/heads/$br:refs/heads/$br" --force
      #     done
